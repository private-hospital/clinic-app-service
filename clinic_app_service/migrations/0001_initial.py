# Generated by Django 5.1.6 on 2025-03-02 16:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_percent', models.IntegerField(blank=True, null=True, verbose_name='Знижка')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Сума без знижки')),
                ('total', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Сума зі знижкою')),
                ('paid_date', models.DateTimeField(verbose_name='Дата оплати')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name="Ім'я")),
                ('last_name', models.CharField(max_length=255, verbose_name='Прізвище')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='По батькові')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Номер телефону')),
                ('email', models.EmailField(max_length=255, verbose_name='Електронна пошта')),
                ('birth_date', models.DateField(verbose_name='Дата народження')),
                ('gender', models.CharField(choices=[('M', 'Чоловіча'), ('F', 'Жіноча')], max_length=1, verbose_name='Стать')),
                ('discount_group', models.CharField(blank=True, choices=[('military', 'Військові (знижка 20%)'), ('elderly', 'Люди похилого віку (знижка 10%)'), ('disabled', 'Люди з інвалідністю (знижка 5%)'), ('staff_family', 'Члени родин працівників (знижка 40%)')], max_length=20, null=True, verbose_name='Пільгова група')),
            ],
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва прайс-листа')),
                ('status', models.CharField(choices=[('active', 'Активний'), ('inactive', 'Неактивний')], default='Неактивний', max_length=8, verbose_name='Стан')),
                ('is_archived', models.BooleanField(verbose_name='Архівовано')),
                ('archive_reason', models.TextField(blank=True, null=True, verbose_name='Причина архівування')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Назва послуги')),
                ('archived', models.BooleanField(default=False, verbose_name='Архівовано')),
            ],
        ),
        migrations.CreateModel(
            name='PriceListEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Ціна')),
                ('price_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='clinic_app_service.pricelist')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_entries', to='clinic_app_service.service')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name="Ім'я")),
                ('last_name', models.CharField(max_length=255, verbose_name='Прізвище')),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='По батькові')),
                ('email', models.EmailField(max_length=255, verbose_name='Електронна пошта')),
                ('user_type', models.CharField(choices=[('recorder', 'Реєстратор'), ('manager', 'Керівник'), ('doctor', 'Лікар')], max_length=255, verbose_name='Тип користувача')),
                ('password_hash', models.TextField(verbose_name='Хеш паролю')),
                ('qualification', models.CharField(max_length=100, verbose_name='Кваліфікація')),
                ('services', models.ManyToManyField(blank=True, related_name='user_doctor', to='clinic_app_service.service', verbose_name='Послуги')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execution_status', models.CharField(choices=[('planned', 'Запланований'), ('canceled', 'Скасований'), ('done', 'Завершений')], default='Заплановано', max_length=15, verbose_name='Стан виконання')),
                ('appointment_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата виконання')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершення')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='clinic_app_service.invoice')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='clinic_app_service.patient')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='clinic_app_service.service')),
                ('doctor', models.ForeignKey(limit_choices_to={'user_type': 'doctor'}, on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='clinic_app_service.user')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('analysis', 'Результати аналізів'), ('referral', 'Направлення'), ('diagnosis', 'Діагноз')], max_length=255, verbose_name='Тип запису')),
                ('pdf_links', models.CharField(blank=True, max_length=255, null=True, verbose_name='Посилання на PDF-файли')),
                ('doctor_conclusion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Висновок лікаря')),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата створення')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='clinic_app_service.patient')),
                ('services', models.ManyToManyField(blank=True, related_name='medical_records', to='clinic_app_service.service', verbose_name='Необхідні обстеження')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('record_type', 'diagnosis'), models.Q(('doctor_conclusion', None), _negated=True)), models.Q(('record_type', 'diagnosis'), _negated=True), _connector='OR'), name='check_diagnosis_doctor_conclusion'), models.CheckConstraint(condition=models.Q(models.Q(('record_type', 'analysis'), models.Q(('pdf_links', None), _negated=True)), models.Q(('record_type', 'analysis'), _negated=True), _connector='OR'), name='check_analysis_pdf_links')],
            },
        ),
    ]
